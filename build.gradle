buildscript {
	repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jmailen.gradle:kotlinter-gradle:${kotlinLinterVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'org.jmailen.kotlinter'

group = "multi-docker-aws"
version = ""
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
    maven {
        url  "https://dl.bintray.com/cdimascio/maven/"
    }
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	compile("org.apache.commons:commons-pool2")
    compile("org.springframework.boot:spring-boot-starter-data-redis:${springDataRedis}")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation ("com.nhaarman.mockitokotlin2:mockito-kotlin:${kotlinMockitoVersion}")
    testImplementation("com.github.kstyrc:embedded-redis:${embeddedRedisVersion}")
}

kotlinter {
	ignoreFailures = false
	indentSize = 4
	continuationIndentSize = 4
	reporters = ['checkstyle', 'plain']
}
